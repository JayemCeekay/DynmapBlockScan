
buildscript {
    repositories {
     mavenLocal()
     maven { url "https://oss.sonatype.org/content/repositories/releases" }
     maven { url "http://repo.mikeprimm.com" }
     maven { url "https://repo.maven.apache.org/maven2" }
     maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
     maven { url "https://repo.codemc.org/repository/maven-public/" }
     maven { url = 'https://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = project.config.Dynmap_version + project.config.Dynmap_extversion
group= "us.dynmap.forge" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DynmapBlockScan"
targetCompatibility = '1.8'
sourceCompatibility = '1.8'
ext.buildNumber = System.getenv().BUILD_NUMBER ?: "Dev"

dependencies {
    compile "us.dynmap:DynmapCoreAPI:${config.Dynmap_version}${config.Dynmap_extversion}:all"
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.219'
}

minecraft {
	mappings channel: 'stable', version: '47-1.13.2'
    runs {
        server {
            workingDirectory project.file('run').canonicalPath
        }
	}
}

repositories {
    mavenLocal()
    maven { url "http://repo.mikeprimm.com" }
}

configurations {
    dynmap
    compile.extendsFrom dynmap
}

processResources
{
    inputs.property "version", project.version + '-' + project.ext.buildNumber
    
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
                
        // replace version and mcversion
        expand(
        	version: project.version + '-' + project.ext.buildNumber,
        	mcversion: "1.13.2"
    	)
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
   classifier = "forge-${config.minecraft_version}"
   destinationDir = project.projectDir
   from { configurations.dynmap.collect { it.isDirectory() ? it : zipTree(it) } }
}
